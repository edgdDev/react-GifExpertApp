{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","category","type","value","placeholder","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","title","GifGridItem","className","src","alt","GrifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OAEI,sBAAMC,SAhBW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAS,IAErBP,GAAc,SAAAQ,GAAQ,OAAKN,GAAL,mBAAoBM,OAC1CL,EAAc,MAShB,SACI,uBACAM,KAAK,OACLC,MAAOR,EACPS,YAAY,yCACZC,SA3BkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOH,a,+BCRlBI,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWT,GAF/C,+DAGAU,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,IAClCY,MAAOJ,EAAII,UAXA,kBAgBZN,GAhBY,4CAAH,sDCiBLO,EAhBK,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBG,EAAkB,EAAlBA,MAAOZ,EAAW,EAAXA,IAI/B,OAEI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMJ,IACvB,4BAAKA,QC2BFK,EAhCE,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAIhB,ECNwB,SAAEA,GAE1B,MAA0BP,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAW,WAGPvB,EAAQN,GACH8B,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,WAGZ,CAAC1B,IAIG2B,EDlB0BM,CAAcjC,GAAlCkB,EAAb,EAAQL,KAAaa,EAArB,EAAqBA,QAIrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDtB,IAElD0B,GAAW,mBAAGJ,UAAU,gEAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEIJ,EAAOH,KAAI,SAAAC,GAAG,OAEX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEYnBiB,EAhCM,WAEjB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ2C,EAAWpB,KAAI,SAAAf,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAWA,GADLA,YCnB9BoC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6fbcc87e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value)\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        // console.log(\"Submit Hecho!!\")\r\n        if(inputValue.length > 2) {\r\n\r\n          setCategories(category => [inputValue, ...category]);\r\n          setInputValue('');\r\n\r\n         }\r\n\r\n\r\n    }\r\n    \r\n    return(\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            placeholder='Escriba el personaje que quiere buscar'\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=y9l49tnjT44txbEjEo5dW3dAbhgbqXNp`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            url: img.images?.downsized_medium.url,\r\n            title: img.title\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\n\r\nconst GifGridItem = ( { id, title, url } ) => {\r\n\r\n    // console.log({ id, title, url });\r\n\r\n    return (\r\n\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default GifGridItem;","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nconst GrifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash animate__infinite \tinfinite\">Loading...</p>}\r\n\r\n             <div className=\"card-grid\">\r\n     \r\n                {images.map(img => (\r\n \r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                    /> \r\n\r\n                ))}\r\n           \r\n            </div>\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default GrifGrid;\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({ \r\n                        data: imgs,\r\n                        loading: false\r\n                    })  \r\n                }, 1500); \r\n            });\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GrifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     setCategories([...categories, 'HunterxHunter']);\r\n    //     //setCategories(categ => [...categ, 'HunterxHunter'])\r\n    \r\n    // }\r\n    \r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n            <ol>\r\n                {    \r\n                    categories.map(category => (\r\n                        <GrifGrid \r\n                        key={ category }\r\n                        category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}